"""Final working schema

Revision ID: 344643c0f8b7
Revises: e5f598f6bbe6
Create Date: 2025-10-10 02:28:43.371693

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '344643c0f8b7'
down_revision = 'e5f598f6bbe6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('author', sa.String(length=150), nullable=False),
    sa.Column('isbn', sa.String(length=13), nullable=False),
    sa.Column('publication_year', sa.Integer(), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('isbn')
    )
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_books_author'), ['author'], unique=False)

    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('book_category_link',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'category_id')
    )
    op.create_table('book_copies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('book_copies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_book_copies_book_id'), ['book_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_book_copies_status'), ['status'], unique=False)

    op.create_table('loans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_copy_id', sa.Integer(), nullable=False),
    sa.Column('loan_date', sa.DateTime(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('return_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['book_copy_id'], ['book_copies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('loans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_loans_book_copy_id'), ['book_copy_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loans_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('loans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_loans_user_id'))
        batch_op.drop_index(batch_op.f('ix_loans_book_copy_id'))

    op.drop_table('loans')
    with op.batch_alter_table('book_copies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_book_copies_status'))
        batch_op.drop_index(batch_op.f('ix_book_copies_book_id'))

    op.drop_table('book_copies')
    op.drop_table('book_category_link')
    op.drop_table('categories')
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_books_author'))

    op.drop_table('books')
    # ### end Alembic commands ###
